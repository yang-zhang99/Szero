spring:
  application:
    name: ttdo-gateway
  datasource:
    url: ${SPRING_DATASOURCE_URL:jdbc:mysql://db.hzero.org:3306/hzero_platform?useUnicode=true&characterEncoding=utf-8&useSSL=false}
    username: ${SPRING_DATASOURCE_USERNAME:hzero}
    password: ${SPRING_DATASOURCE_PASSWORD:hzero}
    hikari:
      # 连接池最小空闲连接数
      minimum-idle: ${SPRING_DATASOURCE_MINIMUM_IDLE:20}
      # 连接池允许的最大连接数
      maximum-pool-size: ${SPRING_DATASOURCE_MAXIMUM_POOL_SIZE:200}
      # 等待连接池分配连接的最大时长（毫秒）
      connection-timeout: ${SPRING_DATASOURCE_CONNECTION_TIMEOUT:30000}
  cache:
    multi:
      l1:
        enabled: false # 是否开启一级缓存
        type: caffeine # 一级缓存实现。目前支持caffeine和guava
      l2:
        enabled: false # 是否开启二级缓存
        type: redis # 二级缓存的实现
      caches:
        permission: # 请求对应的权限缓存
          l1-spec: initialCapacity=50,maximumSize=500,expireAfterWrite=300s
          l2-spec: expiration=300
  servlet:
    multipart:
      max-file-size: 30MB
      max-request-size: 30MB
  redis:
    host: ${SPRING_REDIS_HOST:redis.hzero.org}
    port: ${SPRING_REDIS_PORT:6379}
    database: ${SPRING_REDIS_DATABASE:4}
    lettuce:
      pool:
        # 资源池中最大连接数
        # 默认8，-1表示无限制；可根据服务并发redis情况及服务端的支持上限调整
        max-active: ${SPRING_REDIS_POOL_MAX_ACTIVE:50}
        # 资源池运行最大空闲的连接数
        # 默认8，-1表示无限制；可根据服务并发redis情况及服务端的支持上限调整，一般建议和max-active保持一致，避免资源伸缩带来的开销
        max-idle: ${SPRING_REDIS_POOL_MAX_IDLE:50}
        # 当资源池连接用尽后，调用者的最大等待时间(单位为毫秒)
        # 默认 -1 表示永不超时，设置5秒
        max-wait: ${SPRING_REDIS_POOL_MAX_WAIT:5000}
  cloud:
    gateway:
      filter:
        add-request-header:
          enabled: false
        secure-headers:
          frame-options: ${SECURE_HEADERS_FRAME_OPTIONS:allow-from http://dev.hzero.org}
      routes:
        - id: hoth
          uri: lb://hzero-oauth
          predicates:
            - Path=/oauth/**
          filters:
            - PreserveHostHeader

        - id: tout
          uri: lb://ttdo-oauth
          predicates:
            - Path=/toauth/**
          filters:
            - PreserveHostHeader
        - id: tiam
          uri: lb://ttdo-iam
          predicates:
            - Path=/tiam/**
          filters:
            - PreserveHostHeader
  main:
    allow-bean-definition-overriding: true
logging:
  level:
    root: info
    org.springframework.web: debug


y:
  gateway:
    # 跨域配置
    cors:
      allowed-origins:
        - "*"
      allowed-headers:
        - "*"
      allowed-methods:
        - "*"
    helper:
      enabled: true
      ## 启用API签名
      signature:
        enabled: false
        secrets:
          - secretId: hzero
            secretKey: 537509248a3da7804d12905c102d14cd1bec000797a6178a7353a4c3ac23a0b3
      jwt-key: hzero # jwt的密钥
      # 是否打印 JWT
      enabled-jwt-log: ${HZERO_GATEWAY_HELPER_ENABLE_JWT_LOG:false}
      filter:
        collect-span:
          # 是否统计API访问情况
          enabled: ${HZERO_GATEWAY_FILTER_COLLECT_SPAN_ENABLED:false}
        common-request:
          # 租户级API是否必须检查租户参数
          check-tenant: ${HZERO_GATEWAY_FILTER_COMMON_REQUEST_CHECK_ORGANIZATION:true}
          # 项目级API是否必须检查项目参数
          check-project: ${HZERO_GATEWAY_FILTER_COMMON_REQUEST_CHECK_PROJECT:true}
          # 是否启用标准的权限检查
          enabled: ${HZERO_GATEWAY_FILTER_COMMON_REQUEST_ENABLE:true}
        menu-permission:
          # 是否检查菜单中包含了API权限
          enabled: ${HZERO_GATEWAY_FILTER_MENU_PERMISSION:false}
      # 权限相关的内容
      permission:
        cache-seconds: 600 # 请求地址和对应的权限缓存时间
        cache-size: 3000  # 请求地址和对应的权限缓存大小
        skip-paths:
          - /oauth/**
          - /toauth/**
          - /swagger/swagger-ui.html
          - /swagger/swagger-resources/**
          - /swagger/webjars/**
          - /swagger/docs/**
          - /*/sock-js/**
          - /*/websocket/**
          - /maintain
          - /actuator/**
          - /hims/lib/**
          - /hfle/lib/**
          - /*/lib/**
          - /**/webjars/**
  ## 服务整体运维配置
  maintain:
    # 全局运维信息
    global-info:
      state: NORMAL
    # 服务运维信息
    service-maintain-info:
      oauth:
        state: NORMAL
    # 运维接口密钥，不配置则在程序启动时生成随机key
    secret-key: hzero
  request:
    counter:
      # http请求监控
      enable: true